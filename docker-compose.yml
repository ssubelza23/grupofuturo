

services:
  frontend:
    build:
      context: ./frontend-service
      dockerfile: Dockerfile
    container_name: frontend
    working_dir: /usr/src/app
    volumes:
      - ./frontend-service:/usr/src/app
    ports:
      - "3001:3001"
    networks:
      - app-network

  user-services:
    build:
      context: ./user-services
      dockerfile: Dockerfile
    container_name: user-services
    ports:
      - "3000:3000"
    networks:
      - app-network

  map-services:
    build:
      context: ./map-services
      dockerfile: Dockerfile
    container_name: map-services
    ports:
      - "4000:4000"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    networks:
      - app-network
    depends_on:
      - frontend
      - user-services
      - map-services

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge