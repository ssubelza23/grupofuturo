
services:
  frontend:
    build:
      context: ./frontend-service
      dockerfile: Dockerfile
    container_name: frontend
    working_dir: /usr/src/app
    volumes:
      - ./frontend-service:/usr/src/app
    ports:
      - "3001:3001"
    networks:
      - app-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "3000:3000"
    networks:
      - app-network
    env_file:
      - .env

  map-service:
    build:
      context: ./map-service
      dockerfile: Dockerfile
    container_name: map-service
    ports:
      - "4000:4000"
    networks:
      - app-network
    env_file:
      - .env

  db_user:
    image: postgres:latest
    container_name: db_user
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${USER_DB_USER}
      POSTGRES_PASSWORD: ${USER_DB_PASSWORD}
      POSTGRES_DB: ${USER_DB_NAME}
    volumes:
      - db_user_data:/var/lib/postgresql/data
      - ./user-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  db_map:
    image: postgis/postgis:latest
    container_name: db_map
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${MAP_DB_USER}
      POSTGRES_PASSWORD: ${MAP_DB_PASSWORD}
      POSTGRES_DB: ${MAP_DB_NAME}
    volumes:
      - db_map_data:/var/lib/postgresql/data
      - ./map-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    networks:
      - app-network
    depends_on:
      - frontend
      - user-service
      - map-service

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_user_data:
  db_map_data: