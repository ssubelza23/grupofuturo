services:
  frontend:
    build:
      context: ./frontend-service
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    volumes:
      - ./frontend-service/build:/usr/share/nginx/html  # Servir React desde Nginx
    networks:
      - app-network
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
      - ./frontend-service/build:/usr/share/nginx/html  # MONTAR REACT EN NGINX
    networks:
      - app-network
    depends_on:
      - frontend
      - user-services
      - map-services

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
    - ./nginx/certbot/conf:/etc/letsencrypt
    - ./nginx/certbot/www:/var/www/certbot
    networks:
    - app-network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --quiet --no-self-upgrade; sleep 12h & wait $${!}; done;'"
    command: sleep infinity 

networks:
  app-network:
    driver: bridge

volumes:
  db_user_data:
  db_map_data:
