services:
  frontend:
    build:
      context: ./frontend-service
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    volumes:
      - ./frontend-service/build:/usr/share/nginx/html  # Servir React desde Nginx
    networks:
      - app-network

  user-services:
    build:
      context: ./user-services
      dockerfile: Dockerfile
    container_name: user-services
    ports:
      - "3000:3000"
    networks:
      - app-network
    env_file:
      - .env

  map-services:
    build:
      context: ./map-services
      dockerfile: Dockerfile
    container_name: map-services
    ports:
      - "4000:4000"
    networks:
      - app-network
    env_file:
      - .env

  db_user:
    image: postgres:latest
    container_name: db_user
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${USER_DB_USER}
      POSTGRES_PASSWORD: ${USER_DB_PASSWORD}
      POSTGRES_DB: ${USER_DB_NAME}
    volumes:
      - db_user_data:/var/lib/postgresql/data
      - ./user-services/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  db_map:
    image: postgis/postgis:latest
    container_name: db_map
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${MAP_DB_USER}
      POSTGRES_PASSWORD: ${MAP_DB_PASSWORD}
      POSTGRES_DB: ${MAP_DB_NAME}
    volumes:
      - db_map_data:/var/lib/postgresql/data
      - ./map-services/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certbot/.well-known:/var/www/certbot/.well-known
      - /etc/letsencrypt:/etc/letsencrypt
     
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
    restart: unless-stopped
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/.well-known:/var/www/certbot/.well-known
      - /etc/letsencrypt:/etc/letsencrypt
    entrypoint: >
      sh -c "trap exit TERM; while :; do sleep 1; done"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_user_data:
  db_map_data:
