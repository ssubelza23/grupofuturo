version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: db_user
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  users-service:
    build: .
    container_name: users-service
    env_file:
      - .env
    command: node src/server.js
    volumes:
      - .:/usr/src/app
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_HOST: db_user
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      FRONTEND_URL: ${FRONTEND_URL}

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: